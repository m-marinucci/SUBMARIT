name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Cache Sphinx build
        uses: actions/cache@v4
        with:
          path: docs/_build
          key: ${{ runner.os }}-sphinx-${{ hashFiles('docs/**/*.rst', 'docs/**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-sphinx-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[docs]"
          
      - name: Build documentation
        run: |
          cd docs
          make clean html
          
      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html

  # Deploy job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Link check job (scheduled)
  linkcheck:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[docs]"
          
      - name: Check links
        run: |
          cd docs
          make linkcheck
        continue-on-error: true
        
      - name: Upload linkcheck report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: linkcheck-report
          path: docs/_build/linkcheck/output.txt

# Schedule nightly link checks
# Uncomment to enable:
# on:
#   schedule:
#     - cron: '0 2 * * *'  # 2 AM UTC daily